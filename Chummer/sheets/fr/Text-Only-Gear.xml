<?xml version="1.0" encoding="UTF-8" ?>
<!-- Text-Only Character Sheet -->
<!-- Created by Keith Rudolph, krudolph@gmail.com -->
<!-- Version -497 -->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	
	<xsl:template match="/characters/character">
		<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
			<head>
				<meta http-equiv="x-ua-compatible" content="IE=Edge"/>
				<title><xsl:value-of select="name" /></title>
				<style type="text/css">
					*
					{
						font-family: courier new, courier;
						font-size: 8pt;
					}
				</style>
			</head>
			<body>				
				<xsl:if test="cyberwares/cyberware">
					<br />
					<br />== Cyberware/Bioware ==
					<xsl:call-template name="cyberware" />
				</xsl:if>
				
				<xsl:if test="armors/armor">
					<br />
					<br />== Armor ==
					<xsl:call-template name="armors" />
				</xsl:if>
				
				<xsl:if test="weapons/weapon">
					<br />
					<br />== Weapons ==
					<xsl:call-template name="weapons" />
				</xsl:if>
				
				<xsl:if test="gears/gear[iscommlink = 'True'] or armors/armor/gears/gear[iscommlink = 'True'] or cyberwares/cyberware/gears/gear[iscommlink = 'True'] or cyberwares/cyberware/children/cyberware/gears/gear[iscommlink = 'True'] or weapons/weapon/accessories/accessory/gears/gear[iscommlink = 'True']">
					<br />
					<br />== Commlink ==
					<xsl:call-template name="commlinks" />
				</xsl:if>
				
				<xsl:if test="gears/gear[iscommlink != 'True']">
					<br />
					<br />== Gear ==
					<xsl:call-template name="gear" />
				</xsl:if>
				
				<xsl:if test="vehicles/vehicle">
					<br />
					<br />== Vehicles ==
					<xsl:call-template name="vehicles" />
				</xsl:if>
			</body>
		</html>
	</xsl:template>
	
	<xsl:template name="for.loop">
		<xsl:param name="i" />
		<xsl:param name="count" />
		<xsl:if test="$i &lt;= $count">
			<xsl:text>&#160;</xsl:text>
			<xsl:call-template name="for.loop">
				<xsl:with-param name="i">
					<xsl:value-of select="$i + 1" />
				</xsl:with-param>
				<xsl:with-param name="count">
					<xsl:value-of select="$count" />
				</xsl:with-param>
			</xsl:call-template>
		</xsl:if>
	</xsl:template>
	
	<xsl:template name="cyberware">
		<xsl:for-each select="cyberwares/cyberware">
			<xsl:sort select="name" />
			<br /><xsl:value-of select="name" />
				<xsl:if test="essence != 0"> Essence <xsl:value-of select="essence" /></xsl:if>
				<xsl:if test="location != ''"> (<xsl:value-of select="location" />)</xsl:if>
				<xsl:if test="children/cyberware">
					<xsl:for-each select="children/cyberware">
						<br />&#160;&#160;&#160;+<xsl:value-of select="name" />
						<xsl:if test="essence != 0"> Essence <xsl:value-of select="essence" /></xsl:if>
					</xsl:for-each>
				</xsl:if>
		</xsl:for-each>
	</xsl:template>
	
	<xsl:template name="gearplugin">
		<xsl:param name="gear" />
		<xsl:for-each select="children/gear">
			<xsl:sort select="name" />
							<xsl:value-of select="name" />
							<xsl:if test="essence != 0"><xsl:text> </xsl:text><xsl:value-of select="essence" /></xsl:if>
							<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
							<xsl:if test="children/gear">
								[<xsl:call-template name="gearplugin">
									<xsl:with-param name="gear" select="." />
								</xsl:call-template>]
							</xsl:if>
							<xsl:if test="position() != last()">; </xsl:if>
		</xsl:for-each>
	</xsl:template>
	
	<xsl:template name="gear">
		<xsl:for-each select="gears/gear[iscommlink != 'True']">
			<xsl:sort select="name" />
			<br /><xsl:value-of select="name" />
				<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
				<xsl:if test="essence != 0"> Essence <xsl:value-of select="essence" /></xsl:if>
				<xsl:if test="qty &gt; 1"> x<xsl:value-of select="qty" /></xsl:if>
				<xsl:if test="children/gear">
					<xsl:for-each select="children/gear">
						<br />&#160;&#160;&#160;+<xsl:value-of select="name" />
						<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
						<xsl:if test="essence != 0"> Essence <xsl:value-of select="essence" /></xsl:if>
						<xsl:if test="children/gear">
							[<xsl:call-template name="gearplugin">
								<xsl:with-param name="gear" select="." />
							</xsl:call-template>]
						</xsl:if>
					</xsl:for-each>
				</xsl:if>
		</xsl:for-each>
	</xsl:template>
	
	<xsl:template name="commlinks">
		<xsl:for-each select="gears/gear[iscommlink = 'True']">
			<xsl:sort select="name" />
			<br /><xsl:value-of select="name" /> (ATT: <xsl:value-of select="attack" />, SLZ: <xsl:value-of select="sleaze" />, DP: <xsl:value-of select="dataprocessing" />, FWL: <xsl:value-of select="firewall" />)
				<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
				<xsl:if test="essence != 0"> Essence <xsl:value-of select="essence" /></xsl:if>
				<xsl:if test="qty &gt; 1"> x<xsl:value-of select="qty" /></xsl:if>
				<xsl:if test="children/gear">
					<xsl:for-each select="children/gear">
						<br />&#160;&#160;&#160;+<xsl:value-of select="name" />
						<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
						<xsl:if test="essence != 0"> Essence <xsl:value-of select="essence" /></xsl:if>
						<xsl:if test="children/gear">
							[<xsl:for-each select="children/gear">
								<xsl:sort select="name" />
								<xsl:value-of select="name" />
								<xsl:if test="essence != 0"><xsl:text> </xsl:text><xsl:value-of select="essence" /></xsl:if>
								<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
								<xsl:if test="position() != last()">, </xsl:if>
							</xsl:for-each>]
						</xsl:if>
					</xsl:for-each>
				</xsl:if>
				<xsl:if test="gears/gear[isprogram = 'True']">
					<xsl:for-each select="gears/gear[isprogram = 'True']">
						<xsl:sort select="name" />
						<br />&#160;&#160;&#160;+<xsl:value-of select="name" />
						<xsl:if test="rating &gt; 0"><xsl:text> </xsl:text><xsl:value-of select="rating" /></xsl:if>
						<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
						<xsl:if test="children/gear">
							[<xsl:for-each select="children/gear">
								<xsl:sort select="name" />
								<xsl:value-of select="name" />
								<xsl:if test="essence != 0"><xsl:text> </xsl:text><xsl:value-of select="essence" /></xsl:if>
								<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
								<xsl:if test="position() != last()">, </xsl:if>
							</xsl:for-each>]
						</xsl:if>
					</xsl:for-each>
				</xsl:if>
		</xsl:for-each>
		<xsl:for-each select="armors/armor/gears/gear[iscommlink = 'True']">
			<xsl:sort select="name" />
			<br /><xsl:value-of select="name" /> (ATT: <xsl:value-of select="attack" />, SLZ: <xsl:value-of select="sleaze" />, DP: <xsl:value-of select="dataprocessing" />, FWL: <xsl:value-of select="firewall" />)
			<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
				<xsl:if test="essence != 0"> Essence <xsl:value-of select="essence" /></xsl:if>
				<xsl:if test="qty &gt; 1"> x<xsl:value-of select="qty" /></xsl:if>
				<xsl:if test="children/gear">
					<xsl:for-each select="children/gear">
						<br />&#160;&#160;&#160;+<xsl:value-of select="name" />
						<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
						<xsl:if test="essence != 0"> Essence <xsl:value-of select="essence" /></xsl:if>
						<xsl:if test="children/gear">
							[<xsl:for-each select="children/gear">
								<xsl:sort select="name" />
								<xsl:value-of select="name" />
								<xsl:if test="essence != 0"><xsl:text> </xsl:text><xsl:value-of select="essence" /></xsl:if>
								<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
								<xsl:if test="position() != last()">, </xsl:if>
							</xsl:for-each>]
						</xsl:if>
					</xsl:for-each>
				</xsl:if>
				<xsl:if test="gears/gear[isprogram = 'True']">
					<xsl:for-each select="gears/gear[isprogram = 'True']">
						<xsl:sort select="name" />
						<br />&#160;&#160;&#160;+<xsl:value-of select="name" />
						<xsl:if test="rating &gt; 0"><xsl:text> </xsl:text><xsl:value-of select="rating" /></xsl:if>
						<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
						<xsl:if test="children/gear">
							[<xsl:for-each select="children/gear">
								<xsl:sort select="name" />
								<xsl:value-of select="name" />
								<xsl:if test="essence != 0"><xsl:text> </xsl:text><xsl:value-of select="essence" /></xsl:if>
								<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
								<xsl:if test="position() != last()">, </xsl:if>
							</xsl:for-each>]
						</xsl:if>
					</xsl:for-each>
				</xsl:if>
		</xsl:for-each>
		<xsl:for-each select="cyberwares/cyberware/gears/gear[iscommlink = 'True']">
			<xsl:sort select="name" />
			<br /><xsl:value-of select="name" /> (ATT: <xsl:value-of select="attack" />, SLZ: <xsl:value-of select="sleaze" />, DP: <xsl:value-of select="dataprocessing" />, FWL: <xsl:value-of select="firewall" />)
			<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
				<xsl:if test="essence != 0"> Essence <xsl:value-of select="essence" /></xsl:if>
				<xsl:if test="qty &gt; 1"> x<xsl:value-of select="qty" /></xsl:if>
				<xsl:if test="children/gear">
					<xsl:for-each select="children/gear">
						<br />&#160;&#160;&#160;+<xsl:value-of select="name" />
						<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
						<xsl:if test="essence != 0"> Essence <xsl:value-of select="essence" /></xsl:if>
						<xsl:if test="children/gear">
							[<xsl:for-each select="children/gear">
								<xsl:sort select="name" />
								<xsl:value-of select="name" />
								<xsl:if test="essence != 0"><xsl:text> </xsl:text><xsl:value-of select="essence" /></xsl:if>
								<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
								<xsl:if test="position() != last()">, </xsl:if>
							</xsl:for-each>]
						</xsl:if>
					</xsl:for-each>
				</xsl:if>
				<xsl:if test="gears/gear[isprogram = 'True']">
					<xsl:for-each select="gears/gear[isprogram = 'True']">
						<xsl:sort select="name" />
						<br />&#160;&#160;&#160;+<xsl:value-of select="name" />
						<xsl:if test="rating &gt; 0"><xsl:text> </xsl:text><xsl:value-of select="rating" /></xsl:if>
						<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
						<xsl:if test="children/gear">
							[<xsl:for-each select="children/gear">
								<xsl:sort select="name" />
								<xsl:value-of select="name" />
								<xsl:if test="essence != 0"><xsl:text> </xsl:text><xsl:value-of select="essence" /></xsl:if>
								<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
								<xsl:if test="position() != last()">, </xsl:if>
							</xsl:for-each>]
						</xsl:if>
					</xsl:for-each>
				</xsl:if>
		</xsl:for-each>
		<xsl:for-each select="cyberwares/cyberware/children/cyberware/gears/gear[iscommlink = 'True']">
			<xsl:sort select="name" />
			<br /><xsl:value-of select="name" /> (ATT: <xsl:value-of select="attack" />, SLZ: <xsl:value-of select="sleaze" />, DP: <xsl:value-of select="dataprocessing" />, FWL: <xsl:value-of select="firewall" />)
			<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
				<xsl:if test="essence != 0"> Essence <xsl:value-of select="essence" /></xsl:if>
				<xsl:if test="qty &gt; 1"> x<xsl:value-of select="qty" /></xsl:if>
				<xsl:if test="children/gear">
					<xsl:for-each select="children/gear">
						<br />&#160;&#160;&#160;+<xsl:value-of select="name" />
						<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
						<xsl:if test="essence != 0"> Essence <xsl:value-of select="essence" /></xsl:if>
						<xsl:if test="children/gear">
							[<xsl:for-each select="children/gear">
								<xsl:sort select="name" />
								<xsl:value-of select="name" />
								<xsl:if test="essence != 0"><xsl:text> </xsl:text><xsl:value-of select="essence" /></xsl:if>
								<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
								<xsl:if test="position() != last()">, </xsl:if>
							</xsl:for-each>]
						</xsl:if>
					</xsl:for-each>
				</xsl:if>
				<xsl:if test="gears/gear[isprogram = 'True']">
					<xsl:for-each select="gears/gear[isprogram = 'True']">
						<xsl:sort select="name" />
						<br />&#160;&#160;&#160;+<xsl:value-of select="name" />
						<xsl:if test="rating &gt; 0"><xsl:text> </xsl:text><xsl:value-of select="rating" /></xsl:if>
						<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
						<xsl:if test="children/gear">
							[<xsl:for-each select="children/gear">
								<xsl:sort select="name" />
								<xsl:value-of select="name" />
								<xsl:if test="essence != 0"><xsl:text> </xsl:text><xsl:value-of select="essence" /></xsl:if>
								<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
								<xsl:if test="position() != last()">, </xsl:if>
							</xsl:for-each>]
						</xsl:if>
					</xsl:for-each>
				</xsl:if>
		</xsl:for-each>
		<xsl:for-each select="weapons/weapon/accessories/accessory/gears/gear[iscommlink = 'True']">
			<xsl:sort select="name" />
			<br /><xsl:value-of select="name" /> (ATT: <xsl:value-of select="attack" />, SLZ: <xsl:value-of select="sleaze" />, DP: <xsl:value-of select="dataprocessing" />, FWL: <xsl:value-of select="firewall" />)
			<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
				<xsl:if test="essence != 0"> Essence <xsl:value-of select="essence" /></xsl:if>
				<xsl:if test="qty &gt; 1"> x<xsl:value-of select="qty" /></xsl:if>
				<xsl:if test="children/gear">
					<xsl:for-each select="children/gear">
						<br />&#160;&#160;&#160;+<xsl:value-of select="name" />
						<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
						<xsl:if test="essence != 0"> Essence <xsl:value-of select="essence" /></xsl:if>
						<xsl:if test="children/gear">
							[<xsl:for-each select="children/gear">
								<xsl:sort select="name" />
								<xsl:value-of select="name" />
								<xsl:if test="essence != 0"><xsl:text> </xsl:text><xsl:value-of select="essence" /></xsl:if>
								<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
								<xsl:if test="position() != last()">, </xsl:if>
							</xsl:for-each>]
						</xsl:if>
					</xsl:for-each>
				</xsl:if>
				<xsl:if test="gears/gear[isprogram = 'True']">
					<xsl:for-each select="gears/gear[isprogram = 'True']">
						<xsl:sort select="name" />
						<br />&#160;&#160;&#160;+<xsl:value-of select="name" />
						<xsl:if test="rating &gt; 0"><xsl:text> </xsl:text><xsl:value-of select="rating" /></xsl:if>
						<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
						<xsl:if test="children/gear">
							[<xsl:for-each select="children/gear">
								<xsl:sort select="name" />
								<xsl:value-of select="name" />
								<xsl:if test="essence != 0"><xsl:text> </xsl:text><xsl:value-of select="essence" /></xsl:if>
								<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
								<xsl:if test="position() != last()">, </xsl:if>
							</xsl:for-each>]
						</xsl:if>
					</xsl:for-each>
				</xsl:if>
		</xsl:for-each>
	</xsl:template>
	
	<xsl:template name="weapons">
		<xsl:for-each select="weapons/weapon">
			<xsl:sort select="name" />
			<br /><xsl:value-of select="name" />
			<xsl:if test="weaponname != ''">
				("<xsl:value-of select="weaponname" />")
			</xsl:if>
			<xsl:if test="accessories/accessory or mods/weaponmod">
				<xsl:for-each select="accessories/accessory">
					<xsl:sort select="name" />
					<br />&#160;&#160;&#160;+<xsl:value-of select="name" />
				</xsl:for-each>
				<xsl:for-each select="mods/weaponmod">
					<xsl:sort select="name" />
					<xsl:if test="rating > 0">
					Rating <xsl:value-of select="rating" />
					</xsl:if>
					<br />&#160;&#160;&#160;+<xsl:value-of select="name" />
				</xsl:for-each>
			</xsl:if>
			<br />&#160;&#160;&#160;Pool: <xsl:value-of select="dicepool" />&#160;&#160;&#160;Accuracy: <xsl:value-of select="accuracy" />&#160;&#160;&#160;DV: <xsl:value-of select="damage" />&#160;&#160;&#160;AP: <xsl:value-of select="ap" />&#160;&#160;&#160;RC: <xsl:value-of select="rc" />
		</xsl:for-each>
	</xsl:template>
	
	<xsl:template name="armors">
		<xsl:for-each select="armors/armor">
			<xsl:sort select="name" />
			<br /><xsl:value-of select="name" />
			<xsl:if test="armorname != ''">
				("<xsl:value-of select="armorname" />")
			</xsl:if>
			<xsl:call-template name="for.loop">
				<xsl:with-param name="i">
					<xsl:value-of select="string-length(name)" />
				</xsl:with-param>
				<xsl:with-param name="count">
					<xsl:value-of select="35" />
				</xsl:with-param>
			</xsl:call-template>
			<xsl:value-of select="armor" />
			<xsl:if test="armormods/armormod">
				<xsl:for-each select="armormods/armormod">
					<xsl:sort select="name" />
					<br />&#160;&#160;&#160;+<xsl:value-of select="name" />
					<xsl:if test="essence != 0"><xsl:text> </xsl:text><xsl:value-of select="essence" /></xsl:if>
				</xsl:for-each>
			</xsl:if>
			<xsl:if test="gears/gear">
				<xsl:for-each select="gears/gear">
					<xsl:sort select="name" />
					<br />&#160;&#160;&#160;+<xsl:value-of select="name" />
						<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
						<xsl:if test="essence != 0"> Essence <xsl:value-of select="essence" /></xsl:if>
						<xsl:if test="qty &gt; 1"> x<xsl:value-of select="qty" /></xsl:if>
						<xsl:if test="children/gear">
							<xsl:for-each select="children/gear">
								<br />&#160;&#160;&#160;&#160;&#160;&#160;+<xsl:value-of select="name" />
								<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
								<xsl:if test="essence != 0"> Essence <xsl:value-of select="essence" /></xsl:if>
								<xsl:if test="children/gear">
									[<xsl:for-each select="children/gear">
										<xsl:sort select="name" />
										<xsl:value-of select="name" />
										<xsl:if test="essence != 0"><xsl:text> </xsl:text><xsl:value-of select="essence" /></xsl:if>
										<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
										<xsl:if test="position() != last()">, </xsl:if>
									</xsl:for-each>]
								</xsl:if>
							</xsl:for-each>
						</xsl:if>
				</xsl:for-each>
			</xsl:if>
		</xsl:for-each>
	</xsl:template>
	
	<xsl:template name="vehicles">
		<xsl:for-each select="vehicles/vehicle">
			<xsl:sort select="name" />
			<br /><xsl:value-of select="name" />
			<xsl:if test="vehiclename != ''">
				("<xsl:value-of select="vehiclename" />")
			</xsl:if>
			<xsl:if test="mods/mod">
				<xsl:for-each select="mods/mod">
					<xsl:sort select="name" />
					<br />&#160;&#160;&#160;+<xsl:value-of select="name" />
						<xsl:if test="essence != 0"> Essence <xsl:value-of select="essence" /></xsl:if>
						<xsl:if test="cyberwares/cyberware">
							(<xsl:for-each select="cyberwares/cyberware">
								<xsl:sort select="name" />
								<br />&#160;&#160;&#160;&#160;&#160;&#160;+<xsl:value-of select="name" />
								<xsl:if test="essence != 0"> Essence <xsl:value-of select="essence" /></xsl:if>
							</xsl:for-each>)
						</xsl:if>
				</xsl:for-each>
			</xsl:if>
			<xsl:if test="gears/gear">
				<xsl:for-each select="gears/gear[iscommlink != 'True']">
					<xsl:sort select="name" />
					<br />&#160;&#160;&#160;+<xsl:value-of select="name" />
						<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
						<xsl:if test="essence != 0"> Essence <xsl:value-of select="essence" /></xsl:if>
						<xsl:if test="qty &gt; 1"> x<xsl:value-of select="qty" /></xsl:if>
						<xsl:if test="children/gear">
							<xsl:for-each select="children/gear">
								<br />&#160;&#160;&#160;&#160;&#160;&#160;+<xsl:value-of select="name" />
								<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
								<xsl:if test="essence != 0"> Essence <xsl:value-of select="essence" /></xsl:if>
								<xsl:if test="children/gear">
									[<xsl:for-each select="children/gear">
										<xsl:sort select="name" />
										<xsl:value-of select="name" />
										<xsl:if test="essence != 0"><xsl:text> </xsl:text><xsl:value-of select="essence" /></xsl:if>
										<xsl:if test="cost != ''"> (<xsl:value-of select="cost" />)</xsl:if>
										<xsl:if test="position() != last()">, </xsl:if>
									</xsl:for-each>]
								</xsl:if>
							</xsl:for-each>
						</xsl:if>
				</xsl:for-each>
			</xsl:if>
			<xsl:if test="weapons/weapon">
				<xsl:for-each select="weapons/weapon">
					<xsl:sort select="name" />
					<br />&#160;&#160;&#160;+<xsl:value-of select="name" />
					<xsl:if test="weaponname != ''">
						("<xsl:value-of select="weaponname" />")
					</xsl:if>
					<xsl:if test="accessories/accessory or mods/weaponmod">
						<xsl:for-each select="accessories/accessory">
							<xsl:sort select="name" />
							<br />&#160;&#160;&#160;&#160;&#160;&#160;+<xsl:value-of select="name" />
						</xsl:for-each>
						<xsl:for-each select="mods/weaponmod">
							<xsl:sort select="name" />
							<br />&#160;&#160;&#160;&#160;&#160;&#160;+<xsl:value-of select="name" />
							<xsl:if test="rating > 0">
							Rating <xsl:value-of select="rating" />
							</xsl:if>
						</xsl:for-each>
					</xsl:if>
					<br />&#160;&#160;&#160;&#160;&#160;&#160;DV: <xsl:value-of select="damage" />&#160;&#160;&#160;AP: <xsl:value-of select="ap" />&#160;&#160;&#160;RC: <xsl:value-of select="rc" />
				</xsl:for-each>
			</xsl:if>
		</xsl:for-each>
	</xsl:template>
	
	<xsl:template name="martialarts">
		<xsl:for-each select="martialarts/martialart">
			<xsl:sort select="name" />
			<br /><xsl:value-of select="name" />
			<xsl:for-each select="martialartadvantages/martialartadvantage">
				<xsl:sort select="." />
				<br />&#160;&#160;&#160;+<xsl:value-of select="." />
			</xsl:for-each>
		</xsl:for-each>
		<xsl:for-each select="martialartmaneuvers/martialartmaneuver">
			<xsl:sort select="name" />
			<br /><xsl:value-of select="name" />
		</xsl:for-each>
	</xsl:template>
	
	<xsl:template name="karmaexpenses">
		<xsl:for-each select="expenses/expense[type = 'Karma']">
			<br /><xsl:value-of select="date" />
			<xsl:call-template name="for.loop">
				<xsl:with-param name="i">
					<xsl:value-of select="string-length(date)" />
				</xsl:with-param>
				<xsl:with-param name="count">
					<xsl:value-of select="25" />
				</xsl:with-param>
			</xsl:call-template>
			<xsl:value-of select="amount" />
			<xsl:call-template name="for.loop">
				<xsl:with-param name="i">
					<xsl:value-of select="string-length(amount)" />
				</xsl:with-param>
				<xsl:with-param name="count">
					<xsl:value-of select="12" />
				</xsl:with-param>
			</xsl:call-template>
			<xsl:value-of select="reason" />
		</xsl:for-each>
	</xsl:template>
	
	<xsl:template name="nuyenexpenses">
		<xsl:for-each select="expenses/expense[type = 'Nuyen']">
			<br /><xsl:value-of select="date" />
			<xsl:call-template name="for.loop">
				<xsl:with-param name="i">
					<xsl:value-of select="string-length(date)" />
				</xsl:with-param>
				<xsl:with-param name="count">
					<xsl:value-of select="25" />
				</xsl:with-param>
			</xsl:call-template>
			<xsl:value-of select="amount" />
			<xsl:call-template name="for.loop">
				<xsl:with-param name="i">
					<xsl:value-of select="string-length(amount)" />
				</xsl:with-param>
				<xsl:with-param name="count">
					<xsl:value-of select="12" />
				</xsl:with-param>
			</xsl:call-template>
			<xsl:value-of select="reason" />
		</xsl:for-each>
	</xsl:template>

	<xsl:template name="limitmodifiersphys">
		<xsl:for-each select="limitmodifiersphys/limitmodifier">
			<xsl:sort select="name"/>
			<br />&#160;&#160;&#160;<xsl:value-of select="name"/>
			<xsl:if test="extra != ''"> (<xsl:value-of select="extra"/>)</xsl:if>
		</xsl:for-each>
	</xsl:template>
	
	<xsl:template name="limitmodifiersment">
		<xsl:for-each select="limitmodifiersment/limitmodifier">
			<xsl:sort select="name"/>
			<br />&#160;&#160;&#160;<xsl:value-of select="name"/>
			<xsl:if test="extra != ''"> (<xsl:value-of select="extra"/>)</xsl:if>
		</xsl:for-each>
	</xsl:template>
	
	<xsl:template name="limitmodifierssoc">
		<xsl:for-each select="limitmodifierssoc/limitmodifier">
			<xsl:sort select="name"/>
			<br />&#160;&#160;&#160;<xsl:value-of select="name"/>
			<xsl:if test="extra != ''"> (<xsl:value-of select="extra"/>)</xsl:if>
		</xsl:for-each>
	</xsl:template>
	
	<xsl:template name="limitmodifiersast">
		<xsl:for-each select="limitmodifiersast/limitmodifier">
			<xsl:sort select="name"/>
			<br />&#160;&#160;&#160;<xsl:value-of select="name"/>
			<xsl:if test="extra != ''"> (<xsl:value-of select="extra"/>)</xsl:if>
		</xsl:for-each>
	</xsl:template>
	
	<xsl:template name="PreserveLineBreaks">
		<xsl:param name="text"/>
		<xsl:choose>
			<xsl:when test="contains($text,'&#xA;')">
				<xsl:value-of select="substring-before($text,'&#xA;')"/>
				<br/>
				<xsl:call-template name="PreserveLineBreaks">
					<xsl:with-param name="text">
						<xsl:value-of select="substring-after($text,'&#xA;')"/>
					</xsl:with-param>
				</xsl:call-template>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="$text"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>